// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // compute a pin
    Not(in=sel[0], out=a1);
    Not(in=sel[1], out=a2);
    Not(in=sel[2], out=a3);
    And(a=in, b=a1, out=a4);
    And(a=a2, b=a3, out=a5);
    And(a=a4, b=a5, out=a);

    // compute b pin
    Not(in=sel[1], out=b1);
    Not(in=sel[2], out=b2);
    And(a=b1, b=b2, out=b3);
    And(a=sel[0], b=in, out=b4);
    And(a=b3, b=b4, out=b);

    // compute c pin
    Not(in=sel[0], out=c1);
    Not(in=sel[2], out=c2);
    And(a=c1, b=c2, out=c3);
    And(a=in, b=sel[1], out=c4);
    And(a=c3, b=c4, out=c);

    // compute d pin
    Not(in=sel[2], out=d1);
    And(a=in, b=d1, out=d2);
    And(a=sel[0], b=sel[1], out=d3);
    And(a=d2, b=d3, out=d);

    // compute e pin
    Not(in=sel[0], out=e1);
    Not(in=sel[1], out=e2);
    And(a=e1, b=e2, out=e3);
    And(a=sel[2], b=in, out=e4);
    And(a=e3, b=e4, out=e);

    // compute f pin
    Not(in=sel[1], out=f1);
    And(a=sel[0], b=sel[2], out=f2);
    And(a=f1, b=in, out=f3);
    And(a=f2, b=f3, out=f);

    // compute g pin
    Not(in=sel[0], out=g1);
    And(a=sel[1], b=sel[2], out=g2);
    And(a=in, b=g1, out=g3);
    And(a=g2, b=g3, out=g);

    // compute h pin
    And(a=sel[1], b=sel[0], out=h1);
    And(a=sel[2], b=in, out=h2);
    And(a=h1, b=h2, out=h);

}